# 🐳 AI Sales Agent - Docker Compose Configuration
version: '3.8'

services:
  # 🤖 AI Sales Agent Application
  ai-sales-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-sales-agent
    ports:
      - "5003:5003"
    environment:
      - FLASK_ENV=production
      - PORT=5003
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    env_file:
      - .env
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ai_data:/app/data
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/api/system-status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 🚀 Redis Cache (for enhanced performance)
  redis:
    image: redis:7-alpine
    container_name: ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # 📊 PostgreSQL Database (optional upgrade from SQLite)
  postgres:
    image: postgres:15-alpine
    container_name: ai-postgres
    environment:
      - POSTGRES_DB=ai_sales_agent
      - POSTGRES_USER=ai_user
      - POSTGRES_PASSWORD=ai_secure_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_sales_agent"]
      interval: 10s
      timeout: 5s
      retries: 3

  # 📈 Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - ai-sales-agent
    restart: unless-stopped
    networks:
      - ai-network

# 🌐 Networks
networks:
  ai-network:
    driver: bridge

# 💾 Persistent Volumes
volumes:
  ai_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
